<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.office.notfound.member.model.dao.MemberMapper">

    <resultMap id="authenticated" type="com.office.notfound.member.model.dto.MemberDTO">
        <id property="memberCode" column="member_code"/>
        <result property="memberName" column="member_name"/>
        <result property="memberId" column="member_id"/>
        <result property="memberPassword" column="member_password"/>
        <result property="memberEmail" column="member_email"/>
        <result property="memberPhone" column="member_phone"/>
        <result property="memberEnddate" column="member_enddate"/>
        <result property="memberEndstatus" column="member_endstatus"/>
    </resultMap>

    <!-- tbl_member 테이블의 마지막 auto_increment pk값 조회-->
    <!-- information_schema.TABLES는 데이터베이스의 테이블 정보(메타데이터)를 저장하는 시스템 테이블-->
    <select id = "findMaxMemberCode" parameterType="_int" resultType="int">
        select
            (AUTO_INCREMENT - 1) as 'cursor'
        from
            information_schema.TABLES
        where
            TABLE_SCHEMA = 'officedb' and
            TABLE_NAME = 'tbl_member'
    </select>

    <!-- 로그인 인증 -->
    <select id="findByUsername" parameterType="string"  resultMap="authenticated">
        select
            member_code,
            member_name,
            member_id,
            member_password,
            member_email,
            member_phone,
            member_enddate,
            member_endstatus
        from
            tbl_member
        where
            member_id = #{username}
    </select>

    <!--  사용자별 권한 조회  -->
    <select id = "findAllAuthoritiesByMemberCode" parameterType="_int" resultType="com.office.notfound.member.model.dto.AuthorityDTO">
        select
            a.authority_code as authorityCode,
            a.authority_name as authorityName
        from
            tbl_member_role mr
                join
            tbl_authority a on mr.authority_code = a.authority_code
        where
            mr.member_code = #{ memberCode }
    </select>

    <!-- 중복사용자조회   -->
    <select id="countMemberById" parameterType="string" resultType="Integer">
        SELECT
            COUNT(*)
        FROM
            tbl_member
        WHERE
            member_id = #{memberId}
    </select>

    <!--  중복이메일 조회  -->
    <select id="countMemberByEmail" parameterType="string" resultType="Integer">
        SELECT
            COUNT(*)
        FROM
            tbl_member
        WHERE
            member_email = #{memberEmail}
    </select>

    <!--  신규 사용자 등록  -->
    <insert id="regist" parameterType="com.office.notfound.member.model.dto.SignupDTO">
        INSERT INTO tbl_member
        (
            member_name,
            member_id,
            member_password,
            member_email,
            member_phone,
            member_enddate,
            member_endstatus
        )
        VALUES
            (
                #{memberName},
                #{memberId},
                #{memberPassword},
                #{memberEmail},
                #{memberPhone},
                #{memberEnddate},
                #{memberEndstatus}
            )
    </insert>

    <!--   신규 사용자 정보 및 기본 권한 설정-->
    <insert id="registMemberAuthority" parameterType="com.office.notfound.member.model.dto.MemberAuthorityDTO">
        INSERT INTO tbl_member_role
        (
            member_code,
            authority_code
        )
        VALUES
            (
                #{memberCode},
                #{authorityCode}
            )
    </insert>
    <!--  회원정보변경  -->
    <update id="updatemember">
        UPDATE
        tbl_member
        <set>
            <if test="memberName != null">member_name = #{memberName},</if>
            <if test="memberEmail != null">member_email = #{memberEmail},</if>
            <if test="memberPhone != null">member_phone = #{memberPhone}</if>
        </set>
        WHERE
        member_code=#{memberCode}
    </update>
    <!--어드민 정보 변경-->
    <update id="updateadmin">
        UPDATE
        tbl_member
        <set>
            <if test="memberName != null">member_name = #{memberName},</if>
            <if test="memberEmail != null">member_email = #{memberEmail},</if>
            <if test="memberPhone != null">member_phone = #{memberPhone}</if>
        </set>
        WHERE
        member_code=#{memberCode}
    </update>

    <!-- 회원코드로 조회   -->
    <select id="findMemberByCode" resultType="com.office.notfound.member.model.dto.MemberDTO">
        SELECT
            *
        FROM
            tbl_member
        WHERE
            member_code = #{memberCode}
    </select>

    <!-- 탈퇴처리   -->
    <update id="withdrawMember">
        UPDATE
            tbl_member
        SET
            member_endstatus = 'Y',
            member_enddate = NOW()
        WHERE
            member_code = #{memberCode}
    </update>

    <!-- 아이디 찾기   -->
    <select id="findMemberIdByNameAndEmail" parameterType="map" resultType="string">
        SELECT
            member_id
        FROM
            tbl_member
        WHERE
            member_name = #{memberName}
          AND member_email = #{memberEmail}
    </select>

    <!--  비밀번호변경  -->
    <update id="updatePassword" parameterType="map">
        UPDATE
            tbl_member
        SET
            member_password = #{memberPassword}
        WHERE
            member_code = #{memberCode}
    </update>

    <!--비밀번호찾기-->
    <update id="resetPassword" parameterType="map">
        UPDATE
            tbl_member
        SET
            member_password = #{newPassword}
        WHERE
            member_id = #{memberId}
          AND member_name = #{memberName}
          AND member_email = #{memberEmail};
    </update>

    <!-- 비밀번호찾기  -->
    <select id="findMemberByIdNameEmail" resultType="com.office.notfound.member.model.dto.MemberDTO">
        SELECT
            *
        FROM
            tbl_member
        WHERE
            member_id = #{memberId}
          AND member_name = #{memberName}
          AND member_email = #{memberEmail}
    </select>

    <!-- 모든 회원 정보 조회 -->
    <select id="findAllMembers" resultMap="authenticated">
        SELECT
            member_code,
            member_name,
            member_id,
            member_password,
            member_email,
            member_phone,
            member_enddate,
            member_endstatus
        FROM
            tbl_member
    </select>




</mapper>
