<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.office.notfound.review.model.dao.ReviewMapper">

    <!-- tbl_review -->
    <resultMap id="selectAllReviewListMapper" type="com.office.notfound.review.model.dto.ReviewDTO">
        <id property="reviewCode" column="review_code"/>
        <result property="memberCode" column="member_code"/>
        <result property="paymentCode" column="payment_code"/>
        <result property="memberId" column="member_id"/>
        <result property="reviewTitle" column="review_title"/>
        <result property="reviewContent" column="review_content"/>
        <result property="reviewDate" column="review_created_at"/>
        <result property="reviewRating" column="review_rating"/>
        <result property="reviewImage" column="review_image"/>
    </resultMap>

    <!-- tbl_office + tbl_review 정보를 결합한 resultMap -->
    <resultMap id="officeReviewResultMap" type="com.office.notfound.review.model.dto.OfficeReviewDTO">


        <!-- Office 정보 -->
        <result property="officeCode" column="office_code"/>
        <result property="storeCode" column="store_code"/>
        <result property="officeType" column="office_type"/>
        <result property="officeNum" column="office_num"/>
        <result property="officePrice" column="office_price"/>

        <!-- Review 정보 -->
        <result property="paymentCode" column="payment_code"/>
        <result property="memberId" column="member_id"/>
        <result property="reviewTitle" column="review_title"/>
        <result property="reviewContent" column="review_content"/>
        <result property="reviewRating" column="review_rating"/>
        <result property="reviewDate" column="review_created_at"/>
        <result property="reviewImage" column="review_image"/>
    </resultMap>

    <select id="selectAllReviewList" resultMap="selectAllReviewListMapper">
<!--    <select id="selectAllReviewList" resultType="com.office.notfound.review.model.dto.ReviewDTO">-->
        SELECT * FROM  tbl_review r
    </select>

    <!-- 사무실(tbl_office) + 리뷰 이름, 내용, 날짜, 별점, 이미지 -->
    <!--    <select id="selectOfficeReviewList" resultType="com.office.notfound.review.model.dto.OfficeReviewDTO">-->
    <select id="selectOfficeReviewList" resultMap="officeReviewResultMap">
        SELECT
            o.office_code, o.store_code, o.office_type, o.office_num, o.office_price, p.payment_code,
            r2.review_code, r2.member_id, r2.review_title,
            r2.review_content, r2.review_rating, r2.review_created_at, r2.review_image
        FROM tbl_review r2
                 JOIN tbl_payment p ON r2.payment_code = p.payment_code  -- ✅ 리뷰와 결제 연결
                 JOIN tbl_reservation_payment t on t.payment_code = p.payment_code
                 JOIN tbl_reservation r ON r.reservation_code  = t.reservation_code  -- ✅ 결제한 회원이 예약한 내역 가져오기
                 JOIN tbl_office o ON o.office_code  = r.office_code
    </select>


    <!-- 사무실 상세 리스트 내 리뷰 조회용 -->
    <select id="findOfficeReview" resultMap="officeReviewResultMap">
        SELECT
            r2.review_code, r2.member_id, r2.review_title,
            r2.review_content, r2.review_rating, r2.review_created_at, r2.review_image
        FROM tbl_review r2
                 JOIN tbl_payment p ON r2.payment_code = p.payment_code  -- ✅ 리뷰와 결제 연결
                 JOIN tbl_reservation_payment t on t.payment_code = p.payment_code
                 JOIN tbl_reservation r ON r.reservation_code  = t.reservation_code  -- ✅ 결제한 회원이 예약한 내역 가져오기
                 JOIN tbl_office o ON o.office_code  = r.office_code
        WHERE r.office_code = #{officeCode}
    </select>


    <!-- 로그인 유저의 리뷰 조회 -->
    <select id="selectReviewsByMemberCode" resultType="com.office.notfound.review.model.dto.ReviewDTO" parameterType="_int">
        SELECT * FROM tbl_review WHERE member_code = #{memberCode}
    </select>


    <!-- 리뷰 등록 -->
    <insert id="registNewReview" parameterType="com.office.notfound.review.model.dto.ReviewDTO">
        INSERT INTO
            tbl_review
        (
            member_code,
            payment_code,
            member_id,
            review_title,
            review_content,
            review_created_at,
            review_rating,
            review_image
        )
        VALUES
            (
                #{memberCode},
                #{paymentCode},
                #{memberId},
                #{reviewTitle},
                #{reviewContent},
                DATE_FORMAT(now(), '%Y-%m-%d %H:%i:%s'),
                #{reviewRating},
                #{reviewImage}
            )
    </insert>

    <!-- 나의 리뷰 조회 -->
    <select id="findMyReviewByCode" resultType="com.office.notfound.review.model.dto.ReviewDTO" parameterType="_int">
        SELECT * FROM tbl_review WHERE review_code = #{reviewCode}
    </select>


    <!-- 리뷰 수정 -->
    <update id="updateReview" parameterType="com.office.notfound.review.model.dto.ReviewDTO">
        UPDATE
        tbl_review
        SET
        member_code = #{memberCode},
        payment_code = #{paymentCode},
        member_id = #{memberId},
        review_title = #{reviewTitle},
        review_content = #{reviewContent},
        review_created_at = DATE_FORMAT(now(), '%Y-%m-%d %H:%i:%s'),
        review_rating = #{reviewRating},
        <if test="reviewImage != null and reviewImage != ''">
         review_image = #{reviewImage}
        </if>
        WHERE
        review_code = #{reviewCode}
    </update>


    <!-- 리뷰 삭제 -->
    <delete id="deleteReview" parameterType="int">
        DELETE FROM
            tbl_review
        WHERE
            review_code = #{reviewCode}
    </delete>
</mapper>