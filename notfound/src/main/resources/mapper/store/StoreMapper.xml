<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.office.notfound.store.model.dao.StoreMapper">

    <resultMap id="storeResultMap" type="com.office.notfound.store.model.dto.StoreDTO">
        <id property="storeCode" column="store_code"/>
        <result property="storeName" column="store_name"/>
        <result property="storeCity" column="store_city"/>
        <result property="storeGu" column="store_gu"/>
        <result property="storeAddress" column="store_address"/>
        <result property="latitude" column="latitude"/>
        <result property="longitude" column="longitude"/>
        <result property="description" column="description"/>
        <result property="storeThumbnailUrl" column="store_thumbnail_url"/>
        <result property="storeImg1Url" column="store_img1_url"/>
        <result property="storeImg2Url" column="store_img2_url"/>
        <result property="storeImg3Url" column="store_img3_url"/>
    </resultMap>

    <select id="findAllStores" parameterType="com.office.notfound.store.model.dto.StoreDTO">
        SELECT
            store_code,
            store_name,
            store_city,
            store_gu,
            store_address,
            description,
            store_thumbnail_url
        FROM
            tbl_store
        ORDER BY
            store_name;
    </select>
    <select id="findStoreByCode" resultMap="storeResultMap">
        SELECT
            store_code,
            store_name,
            store_city,
            store_gu,
            store_address,
            latitude,
            longitude,
            description,
            store_thumbnail_url,
            store_img1_url,
            store_img2_url,
            store_img3_url
        FROM
            tbl_store
        WHERE
            store_code = #{storeCode}
    </select>
    <select id="findDistinctCities" parameterType="com.office.notfound.store.model.dto.StoreDTO">
        SELECT DISTINCT
            store_city
        FROM tbl_store
        ORDER BY store_city
    </select>
    <select id="findGuByCity" resultType="string">
        SELECT DISTINCT
            store_gu
        FROM
            tbl_store
        WHERE
            store_city = #{city}
        ORDER BY store_gu
    </select>
    <select id="findStoresByCityAndGu" resultMap="storeResultMap">
        SELECT
            store_code,
            store_name,
            store_city,
            store_gu,
            store_address,
            store_thumbnail_url
        FROM
            tbl_store
        WHERE
            store_city = #{city} AND store_gu = #{gu}
        ORDER BY
            store_name;
    </select>
    <insert id="insertStore" parameterType="com.office.notfound.store.model.dto.StoreDTO">
        INSERT INTO tbl_store
        (
            store_name,
            store_city,
            store_gu,
            store_address,
            latitude,
            longitude,
            description,
            store_thumbnail_url,
            store_img1_url,
            store_img2_url,
            store_img3_url
        )
        VALUES (
                   #{storeName},
                   #{storeCity},
                   #{storeGu},
                   #{storeAddress},
                   #{latitude},
                   #{longitude},
                   #{description},
                   #{storeThumbnailUrl},
                   #{storeImg1Url},
                   #{storeImg2Url},
                   #{storeImg3Url}
               );
    </insert>
    <update id="updateStore" parameterType="com.office.notfound.store.model.dto.StoreDTO">
        UPDATE tbl_store
        SET
            store_name = #{storeName},
            store_city = #{storeCity},
            store_gu = #{storeGu},
            store_address = #{storeAddress},
            latitude = #{latitude},
            longitude = #{longitude},
            description = #{description},
            store_thumbnail_url = CASE WHEN #{storeThumbnailUrl} IS NOT NULL THEN #{storeThumbnailUrl} ELSE store_thumbnail_url END,
            store_img1_url = #{storeImg1Url},
            store_img2_url = #{storeImg2Url},
            store_img3_url = #{storeImg3Url}
        WHERE store_code = #{storeCode}
    </update>
    <delete id="deleteStore" parameterType="com.office.notfound.store.model.dto.StoreDTO">
        DELETE FROM tbl_store
        WHERE store_code = #{storeCode};
    </delete>
</mapper>